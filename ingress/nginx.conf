events {

}

error_log /var/log/nginx/error.log debug;

http {
    server {
        listen 80;
        listen [::]:80;
        server_name chestno-game.online portainer.chestno-game.online;

        return 301 https://$host$request_uri;
    }

    server {
        server_name portainer.chestno-game.online;
        listen 443 ssl http2;
        ssl_certificate /etc/nginx/ssl/all.chestno-game.all/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/all.chestno-game.all/privkey.pem;
        resolver 127.0.0.11 valid=30s;

        location ^~/ {
            set $SER http://portainer:9000;
            proxy_pass $SER;
            proxy_set_header Host $host;
        }
    }

    server {
        server_name pgadmin.chestno-game.online;
        listen 443 ssl http2;
        ssl_certificate /etc/nginx/ssl/all.chestno-game.all/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/all.chestno-game.all/privkey.pem;
        resolver 127.0.0.11 valid=30s;

        location ^~/ {
            set $SER http://pgadmin:80;
            proxy_pass $SER;
            proxy_set_header Host $host;
        }
    }

    server {
        server_name n8n.chestno-game.online;
        listen 443 ssl http2;
        ssl_certificate /etc/nginx/ssl/all.chestno-game.all/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/all.chestno-game.all/privkey.pem;
        resolver 127.0.0.11 valid=30s;

        location / {
            set $N8N_SER http://n8n:5678;
            proxy_pass $N8N_SER;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header HOST $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;

            # Fix for n8n >= 1.87.0 "Invalid origin!" error
            proxy_set_header Origin 'https://n8n.chestno-game.online';

            # WebSocket support for n8n
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Timeouts for long-running workflows
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;

            # Increase client body size for n8n workflow imports
            client_max_body_size 100M;
        }
    }

#   временное дублирование пока разные сертификаты
    server {
        server_name chestno-game.ru;
        listen 443 ssl http2;
        resolver 127.0.0.11 valid=30s;
        ssl_certificate /etc/nginx/ssl/all.chestno-game.all/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/all.chestno-game.all/privkey.pem;

        location ^~ /.well-known {
            root /etc/nginx/well-known;
        }

        location ^~ /honest-be {
            set $SER http://honest-be:8080;
            rewrite ^/honest-be/(.*) /$1 break;
            proxy_pass $SER;
            proxy_set_header Host $host;
        }

        location ^~/ {
            set $SER http://honest-landing:80;
            proxy_pass $SER;
            proxy_set_header Host $host;
        }

        location ^~/api/v1/shop {
            proxy_pass https://n8n.chestno-game.online;
            proxy_set_header Host n8n.chestno-game.online;
        }
    }

    server {
        server_name test.chestno-game.ru;
        listen 443 ssl http2;
        ssl_certificate /etc/nginx/ssl/all.chestno-game.all/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/all.chestno-game.all/privkey.pem;
        resolver 127.0.0.11 valid=30s;

        location ^~/ {
            set $SER http://honest-landing-test:80;
            proxy_pass $SER;
            proxy_set_header Host $host;
        }
    }


    server {
        listen 443 ssl http2 default_server;
        resolver 127.0.0.11 valid=30s;
        ssl_certificate /etc/nginx/ssl/all.chestno-game.all/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/all.chestno-game.all/privkey.pem;

        location ^~ /.well-known {
            root /etc/nginx/well-known;
        }

        location ^~ /honest-be {
            set $SER http://honest-be:8080;
            rewrite ^/honest-be/(.*) /$1 break;
            proxy_pass $SER;
            proxy_set_header Host $host;
        }

        location ^~/ {
            set $SER http://honest-landing:80;
            proxy_pass $SER;
            proxy_set_header Host $host;
        }
    }
}

